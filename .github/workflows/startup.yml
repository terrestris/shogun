# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Startup Shogun

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Java 17
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 17
          java-package: jdk
          architecture: x64

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run mvn install
        run: mvn install --log-file mvn.out.txt

      - name: Clone shogun-docker
        run: git clone https://github.com/terrestris/shogun-docker
        working-directory: ../

      - name: Checkout specific commit to ensure reproducibility
        run: git checkout 4fdcbc51fa2d20bcfb0bcafafdfdece83c863819
        working-directory: ../shogun-docker

      - name: Set environment variables
        run: ./setEnvironment.sh
        working-directory: ../shogun-docker

      - name: Show environment variables
        run: cat .env
        working-directory: ../shogun-docker

      - name: Start containers
        run: docker-compose -f docker-compose.yml -f docker-compose-dev.yml up -d
        working-directory: ../shogun-docker

      - name: Inspect network
        run: docker network inspect shogun-docker_default
        working-directory: ../shogun-docker

      - name: Check if application has started
        run: ./scripts/wait.sh

      - name: Docker logs
        if: always()
        run: docker-compose -f docker-compose.yml -f docker-compose-dev.yml logs
        working-directory: ../shogun-docker

      - name: Maven output
        if: always()
        run: cat mvn.out.txt
